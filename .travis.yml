language: java
jdk: oraclejdk8
env:
  global:
  - ER_VERSION: $(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}'
      --non-recursive org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)
  - ER_RC_VERSION: stellar-erbaseline:${ER_VERSION}-snapshot
  - ER_LATEST: stellar-erbaseline:latest
  - ER_VERSION: stellar-erbaseline:${ER_VERSION}
before_install:
- cp .travis.settings.xml $HOME/.m2/settings.xml
jobs:
  include:
  - stage: test
    script:
    - mvn clean verify
  - stage: development
    if: branch = develop
    script:
    - mvn package
    - echo "Creating development docker for ERBaseline version [${ER_VERSION}]"
    - docker build -f docker/Dockerfile -t ${DOCKER_USER}/${ER_RC_VERSION}d .
    - echo "Release a development build."
    - docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
    - docker push ${DOCKER_USER}/${ER_RC_VERSION}d
  - stage: staging
    if: branch = master
    script:
    - mvn package
    - echo "Creating stage docker for ERBaseline version [${ER_VERSION}]"
    - docker build -f docker/Dockerfile -t data61/${ER_RC_VERSION} .
    - echo "Release a stage build."
    - docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
    - docker push data61/${ER_RC_VERSION}
  - stage: release
    if: tag =~ ^v.*$
    script:
    - mvn package
    - echo "Releasing docker for ERBaseline version [${ER_VERSION}]"
    - docker build -f docker/Dockerfile -t data61/${ER_LATEST} .
    - docker tag data61/${ER_LATEST} data61/${ER_VERSION}
    - echo "create a release build."
    - docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
    - docker push data61/${ER_LATEST}
    - docker push data61/${ER_VERSION}
notifications:
  slack:
    secure: VnAvPMyFzeYpK+tkdI+20DrKPc6wrjCl/mDWb9pBqnTSBRkQUZNaT57ga2POTfkXwS8WnGSxc1NGY+UFTBSnIMCfUqI2lXDBgcRNtL4gQ/5tIKdKsJAvtu0vuxd3HFkBEXKwfiyUAKrRkcZVu0o1Zebv3SopKU1lzcuoWRDYd0RrNjBlqzwwpU/rl8CeAXY3zb+q6sP33I/na0dLyAZFQeOyy6bsMXaTdbE61bq5IWU0whx8NNZ1OfB9mzM2uiPkG1UKzW0EBeNNFnxBhbkBb59/V2x8SXhlkXXyAS1R4CJx645HLd8Z8Yt2vUS2nxJqMz5tt3mb82O2gZbtLRbC//wvbmZ2gua206p9maUsEuJZjGLLvRKrM7mI04FewPhMRsSGcz4HoROzRgdXIz521eZO9md0v4LF3YFSvNuJwMOOpDzlwlxq/gUuMze3JcYA4UcmwmQGxlWGb9xJBBZ2987X8hG4hgW+p8a5uDOaIuuXn74Y/uCVkcmTWvwUax39BNHKu25rrhdwLLFFlD7KEKkl31LzpeLgW6c5/petTriMpN7wMRwtMtoIRSr2NaDe51yXKAKJ3RfUCSHvrZu3rV6fqAeLEqDsjLtL06993hfjC9C1f6yicFyx+U5RrrY//ZLRXJhdixpZA+YXp1ZRbWfxC5XxBnO9sf7jo1Al29o=
